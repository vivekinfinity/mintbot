name: Create Tag

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: write
  issues: write

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'Bump version to') }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20.x"

      - name: Install semver
        run: npm install -g semver

      - name: Extract version from package.json
        id: version
        run: echo ::set-output name=VERSION::$(node -p "require('./package.json').version")

      - name: Minor version bump
        id: minor
        run: echo ::set-output name=MINOR::$(npx semver -i minor ${{ steps.version.outputs.VERSION }})

      - name: Update package.json
        run: |
          echo "Updating package.json to version ${{ steps.minor.outputs.MINOR }}"
          npm version ${{ steps.minor.outputs.MINOR }} --no-git-tag-version

      - name: Stash changes
        run: git stash

      - name: Pull and rebase
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git pull --rebase

      - name: Apply stash
        run: git stash pop

      - name: Commit the new version
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Action"
          git commit -am "Bump version to ${{ steps.minor.outputs.MINOR }}"
          git push

      - name: Create Tag
        run: |
          git tag v${{ steps.minor.outputs.MINOR }} -a -m "Generated tag from GitHub Action"
          git push origin --tags

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GH_PAT }}
          name: Release v${{ steps.minor.outputs.MINOR }}
          tag_name: v${{ steps.minor.outputs.MINOR }}
          draft: false
          prerelease: false
